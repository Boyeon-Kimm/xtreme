<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.xtreme.model.dao.ReviewDao">
	
	<!-- selectByCompId(int compId) : 해당 대회에 대한 전체 리뷰 조회 -->
	<!-- <select id="selectByCompId" parameterType="int" resultType="Review">
		SELECT *
		FROM review
		WHERE compId = #{compId}
	</select> -->
	
	<!-- selectAll() : 리뷰 전체 조회 -->
	<select id="selectAll" resultType="Review">
		SELECT *
		FROM review
	</select>
	
	<!-- selectByReviewId(int id) : 리뷰 상세 조회 -->
	<select id="selectByReviewId" parameterType="int" resultType="Review">
		SELECT *
		FROM review
		WHERE id = #{id}
	</select>
	
	<!-- selectByUserId(String userId) : 내가 쓴 후기 -->
	<select id="selectByUserId" parameterType="String" resultType="Review">
		SELECT *
		FROM review
		WHERE userId = #{userId}
	</select>
	
	<!-- insertReview(Review review) : 리뷰 등록 -->
	<insert id="insertReview" parameterType="Review">
		INSERT INTO review(title, userId, sports, compTitle, content, viewCnt)
		VALUES (#{title}, #{userId}, #{sports}, #{compTitle}, #{content}, #{viewCnt})
	</insert>
	
	<!-- updateReview(Review review) : 리뷰 수정 -->
	<update id="updateReview" parameterType="Review">
		UPDATE review
		SET title = #{title}, content = #{content}
		WHERE id = #{id}
	</update>
	
	<!-- deleteReview(int id) : 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="int">
		DELETE FROM review
		WHERE id = #{id}
	</delete>
	
	<!-- updateViewCnt(int id) : 리뷰 조회수 증가 -->
	<update id="updateViewCnt" parameterType="int">
		UPDATE review
		SET viewCnt = viewCnt + 1
		WHERE id = #{id}
	</update>
	
	<!-- condition으로 묶어서 처리 -->
	<select id="searchByCondition" resultType="Review" parameterType="SearchCondition" >
		SELECT *
		FROM review
		<!-- 어떤 기준을 가지고 검색을 할거냐!!! -->
		<if test="key != 'none'">
			WHERE ${key} LIKE concat('%', #{word}, '%')
		</if>
		<!-- 어떤 기준으로 어떤 방향으로 정렬할래? -->
		<if test="orderBy != 'none'">
			ORDER BY ${orderBy} ${orderByDir}
		</if>
	</select>
	
	
</mapper>